name: Create repo via issue form

run-name: Execute create repo request from @${{ github.actor }}

on:
    issues:
        types: 
            - opened
            - edited

jobs:
    create-repo:
        name: Create repo via issue-form
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v3

#            - name: Generate token
#              id: gentoken
#              uses: tibdex/github-app-token@v1.8.0
#              with:
#                  app_id: ${{ secrets.APP_ID }}
#                  installation_id: ${{ secrets.INSTALLATION_ID }}
#                  private_key: ${{ secrets.PRIVATE_KEY }}
                  
            - uses: actions/setup-node@v3
              with:
                node-version: 16
                
            - name: Install dependencies
              run: npm install @octokit/rest @octokit/auth-app @actions/github

            - name: Generate JWT
              id: generate_jwt
              uses: actions/github-script@v6
              env: 
                APP_ID: ${{ secrets.APP_ID }}
                APP_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
                APP_INSTALLATION_ID: ${{ secrets.INSTALLATION_ID }}
              with:
                script: |
                  const { getOctokit } = require("@actions/github");
                  const { createAppAuth } = require("@octokit/auth-app");
                  const { request } = require("@octokit/request");

                  let permissions = {};
                  const appId = process.env.APP_ID;
                  const privateKey = process.env.APP_PRIVATE_KEY;
                  const installationId = process.env.APP_INSTALLATION_ID;

                  console.log("appId: " + appId);
                  console.log("provateKey: " + privateKey);
                  console.log("installationID: " + installationId);

                  const app = createAppAuth({
                    appId: appId,
                    privateKey: privateKey,
                    request: request.defaults({
                      baseUrl: "${{ github.api_url }}"
                    }),
                  });
                  console.log("app: " + app);
                  const authApp = await app({ type: "app" });
                  console.log("authApp: " + authApp);
                  const octokit = await getOctokit( authApp.token );
                  console.log("octokit: " + octokit);

                  try {
                    const { data: installation } =
                      await octokit.rest.apps.createInstallationAccessToken({
                        installation_id: installationId,
                        permissions
                      });
                    console.log(installation);
                    console.log("installation.token: " + installation.token.substr(0, 20) + "..." + installation.token.substr(-20));
                    core.setSecret(installation.token);
                    core.setOutput("token", installationToken);
                    return installation.token;

                  } catch (error) {
                    console.log(error);
                    core.setFailed(error.message);
                  }

            - name: Create repo
              uses: actions/github-script@v6
              with:
#                github-token: ${{ steps.generate_token.outputs.token }}
                github-token: ${{ steps.generate_jwt.outputs.result }}
                script: |
                  console.log("github-token: " + ${{ steps.generate_jwt.outputs.token }}.substr(0, 20) + "..." + ${{ steps.generate_jwt.outputs.result }}.substr(-20) );
                  const script = require('${{github.workspace}}/main.js')
                  await script({github, context, core})

