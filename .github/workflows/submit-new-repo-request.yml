name: Create repo via issue form

run-name: Execute create repo request from @${{ github.actor }}

on:
    issues:
        types: 
            - opened
            - edited

jobs:
    create-repo:
        name: Create repo via issue-form
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v3

            - uses: actions/setup-node@v3
              with:
                node-version: 16
                
            - name: Install dependencies
              run: npm install @octokit/rest @octokit/auth-app @actions/github

            - name: Generate JWT
              id: generate_jwt
              uses: actions/github-script@v6
              env: 
                APP_ID: ${{ secrets.APP_ID }}
                APP_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
                APP_INSTALLATION_ID: ${{ secrets.INSTALLATION_ID }}
              with:
                script: |
                  const { getOctokit } = require("@actions/github");
                  const { createAppAuth } = require("@octokit/auth-app");
                  const { request } = require("@octokit/request");

                  const app = createAppAuth({
                    appId: process.env.APP_ID,
                    privateKey: process.env.APP_PRIVATE_KEY,
                    request: request.defaults({
                      baseUrl: "https://api.github.com"
                    }),
                  });
                  const authApp = await app({ type: "app" });
                  const octokit = getOctokit( authApp.token );

                  try {
                    const { data: installation } =
                      await octokit.rest.apps.createInstallationAccessToken({
                        installation_id: process.env.APP_INSTALLATION_ID
                      });
                    console.log(installation.token.toString().slice(0, 10));
                    return installation.token;
                  } catch (error) {
                    console.log(error);
                    core.setFailed(error.message);
                  }

            - name: Generate token
              id: generate_token
              uses: tibdex/github-app-token@v1
              with:
                  app_id: ${{ secrets.APP_ID }}
                  installation_id: ${{ secrets.INSTALLATION_ID }}
                  private_key: ${{ secrets.PRIVATE_KEY }}

            - name: Create repo
              id: create_repo
              uses: actions/github-script@v6
              with:
                github-token: ${{ steps.generate_token.outputs.token }}
                script: | 
                  const script = require('${{github.workspace}}/main.js')
                  await script({github, context, core})

              